Backend integration with MongoDB Atlas:
  1) Integrate backend
  + refactor requests so a single fetch gets distributed to blogs/essays children
  + add mailing list button to blogs layout
  + add contact form button to main layout
  + integrate backend into mailing list, contact page
  + save curl unit tests to a txt file
  + click thru everything backend I coulda done broke (writing, user, contact)


  2) Go serverless
  + push backend to a new repo, with a recent commit of the site in a second dir, for future demo purposes
  + replace backend with serverless Vercel functions
  + click through everything and test submit a message

  3) Cleaning house
<<<<<<< HEAD
  + delete previous mongo key. generate new key. add new to env.
  + push backend to new repo, with a recent commit of the site in a second dir, for future demo purposes
  + replace backend with serverless Vercel functions
  + do integration testing


  3) Cleaning house
  + document backend repo (README, comments)
  + generate new mongo key. delete previous key
  + set up a mongodb trigger to email me new messages as they come in
  + clean up file structure
=======
  + generate new mongo key. delete previous key
>>>>>>> parent of 382c9a7 (Transition to Vercel is WIP)
  + push to main
  + make repos public


Next steps
* v3 interface
  + run on a weekly sprint schedule with other-daily pushes
  + whiteboard task tracking of some description
  + sign up for the devsoc fair
  + watch more ui, seo, optimisation yt
  + figma my notebook wireframes
  + implement interfaces from my notebook wireframe
  + integrate backend
  + add backend/db logging
  + add animations
  + make responsive
  + update readme
  + add current content
  + SEO

Extensions:
* 3d art gallery

* from v2
  + debug double-listing situation with essays db return (different data types in db?)
  + add to devlog notes and condense them
  + update readme - simplify, dot points on major features.
  + collect screenshots of v0, v1, v2 for dev notes
  + upload aisoc writing to db